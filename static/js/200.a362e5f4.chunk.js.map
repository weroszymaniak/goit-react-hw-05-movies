{"version":3,"file":"static/js/200.a362e5f4.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAO,mCAEAC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD9B,cAC3BE,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAgB,mCAAG,WAAMC,GAAN,uFACPP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCN,IAD1B,cACxBE,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKhBI,EAAU,mCAAG,WAAMC,GAAN,uFACDT,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DQ,IAF7D,cAClBN,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,sDAOVK,EAAS,mCAAG,WAAMH,GAAN,uFACAP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUN,EADV,oBADA,cACjBE,EADiB,yBAIhBA,EAASC,KAAKO,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAML,GAAN,uFACHP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUN,EADV,2BADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD,4HC7BzB,EAA4B,6BAA5B,EAA+D,uBAA/D,EAA+F,0BAA/F,EAAgI,wBAAhI,EAAqK,8BAArK,EAA0M,wBAA1M,EAAyO,wB,SCiGzO,EA3FkB,WAAO,IAAD,IACdE,GAAOM,EAAAA,EAAAA,MAAPN,GACR,GAAkCO,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAmBjB,IAjBAC,EAAAA,EAAAA,YAAU,YACkB,WACxB,IACEH,GAAW,IAEXZ,EAAAA,EAAAA,IAAiBC,GAAIe,MAAK,SAAAC,GACxBP,EAAaO,EACd,GAKF,CAJC,SACAC,QAAQC,IAAI,QACb,CARD,QASEP,GAAW,EACZ,CACF,CACDQ,EACD,GAAE,CAACnB,IAEAU,EACF,OAAO,SAACU,EAAA,EAAD,IAGT,IAAKZ,EACH,OAAO,KAGT,IACEa,EAOEb,EAPFa,YACAC,EAMEd,EANFc,eACAC,EAKEf,EALFe,MACAC,EAIEhB,EAJFgB,aACAC,EAGEjB,EAHFiB,WACAC,EAEElB,EAFFkB,SACAC,EACEnB,EADFmB,OAGF,OACE,iBAAKC,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMC,GAAE,oBAAElB,EAASmB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,mBAAQJ,UAAWC,EAAYI,KAAK,SAApC,wBAIF,gBACEL,UAAWC,EACXK,MAAM,QACNC,IACEd,EAAW,yCAC2BA,GAD3B,8EAIbe,IAAKd,KAEP,4BACE,0BACGC,EADH,YACYC,QADZ,IACYA,OADZ,EACYA,EAAca,MAAM,EAAG,GADnC,QAGA,wCAAgBZ,MAChB,sCACA,uBAAIC,KACJ,oCACA,eAAIE,UAAWC,EAAf,SACGF,EAAOW,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAMvC,GADA,UAKrB,4BACE,oDACA,gBAAI4B,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMC,GAAE,OAAUF,UAAWC,EAA7B,qBAIF,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMC,GAAE,UAAaF,UAAWC,EAAhC,2BAKJ,SAAC,KAAD,SAIP,C","sources":["api/api.js","webpack://react-homework-template/./src/pages/MovieInfo/MovieInfo.module.css?aa0c","pages/MovieInfo/MovieInfo.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = `b45693f974135662667746d6804bf1da`;\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMoveDetails = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieinfo\":\"MovieInfo_movieinfo__FCOns\",\"img\":\"MovieInfo_img__djcCi\",\"button\":\"MovieInfo_button__u1Kld\",\"list\":\"MovieInfo_list__mK6WL\",\"additional\":\"MovieInfo_additional__j9LyF\",\"item\":\"MovieInfo_item__5J9DE\",\"link\":\"MovieInfo_link__cGdNC\"};","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMoveDetails } from 'api/api';\nimport Loader from 'components/Loader/Loader';\nimport css from './MovieInfo.module.css';\n\nconst MovieInfo = () => {\n  const { id } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const onFetchingDetails = () => {\n      try {\n        setLoading(true);\n\n        fetchMoveDetails(id).then(details => {\n          setMovieInfo(details);\n        });\n      } catch {\n        console.log('error');\n      } finally {\n        setLoading(false);\n      }\n    };\n    onFetchingDetails();\n  }, [id]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (!movieInfo) {\n    return null;\n  }\n\n  const {\n    poster_path,\n    original_title,\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n  } = movieInfo;\n\n  return (\n    <div className={css.movieinfo}>\n      <Link to={location.state?.from ?? '/'}>\n        <button className={css.button} type=\"button\">\n          Go back\n        </button>\n      </Link>\n      <img\n        className={css.img}\n        width=\"300px\"\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : `https://upload.wikimedia.org/wikipedia/commons/d/d1/Image_not_available.png`\n        }\n        alt={original_title}\n      />\n      <div>\n        <h1>\n          {title} ({release_date?.slice(0, 4)})\n        </h1>\n        <p>User score: {popularity}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <ul className={css.list}>\n          {genres.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <h3>Additional information</h3>\n        <ul className={css.additional}>\n          <li className={css.item}>\n            <Link to={`cast`} className={css.link}>\n              Cast\n            </Link>\n          </li>\n          <li className={css.item}>\n            <Link to={`reviews`} className={css.link}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\nexport default MovieInfo;\n"],"names":["axios","API_KEY","fetchTrendingMovies","response","data","results","fetchMoveDetails","id","fetchQuery","query","fetchCast","cast","fetchReviews","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","useEffect","then","details","console","log","onFetchingDetails","Loader","poster_path","original_title","title","release_date","popularity","overview","genres","className","css","to","state","from","type","width","src","alt","slice","map","genre","name"],"sourceRoot":""}